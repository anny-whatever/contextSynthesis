// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String?  @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  conversations Conversation[]

  @@map("users")
}

model Conversation {
  id        String   @id @default(cuid())
  title     String?
  userId    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user     User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages Message[]

  @@map("conversations")
}

model Message {
  id             String   @id @default(cuid())
  conversationId String
  role           Role
  content        String
  metadata       Json?    // Store additional metadata like tool calls, citations, etc.
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relations
  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  toolUsages   ToolUsage[]

  @@map("messages")
}

model ToolUsage {
  id        String   @id @default(cuid())
  messageId String
  toolName  String
  input     Json     // Store tool input parameters
  output    Json?    // Store tool output/results
  status    ToolStatus @default(PENDING)
  error     String?  // Store error message if tool execution failed
  duration  Int?     // Execution time in milliseconds
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  message Message @relation(fields: [messageId], references: [id], onDelete: Cascade)

  @@map("tool_usages")
}

model AgentSession {
  id          String   @id @default(cuid())
  sessionId   String   @unique
  agentName   String
  instructions String?
  context     Json?    // Store agent context and state
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("agent_sessions")
}

enum Role {
  USER
  ASSISTANT
  SYSTEM
  TOOL
}

enum ToolStatus {
  PENDING
  RUNNING
  COMPLETED
  FAILED
}